'use strict';

const CLEANUP_INTERVAL = 3600; // 1 hour in seconds
const RETENTION_TIME = 3600 * 24; // 1 day in seconds

function cleanup(deployments, retention) {
  deployments.forEach(function (value, key, map) {
    if (process.hrtime(value.start)[0] > retention) {
      map.delete(key);
    }
  })
}

class DeploymentManager {
  constructor() {
    this._deployments = new Map();
  }

  deployments() {
    return this._deployments;
  }

  scheduleCleanup(settings) {
    let interval = CLEANUP_INTERVAL;
    let retention = RETENTION_TIME;

    if (settings) {
      if (settings.interval) interval = settings.interval;
      if (settings.retention) retention = settings.retention;
    }
    interval = interval * 1000; // milliseconds

    return setInterval(cleanup, interval, this._deployments, retention);
  }
}

module.exports = DeploymentManager;
